---
- hosts: localhost
  gather_facts: false
  vars:
    - region: us-east-2
    - project_name: meseeks
    - vpcidr: 10.251.0.0/16
    - subnetcidra: 10.251.1.0/24
#    - subnetcidrb: 10.251.2.0/24
  tasks:
  - ec2_vpc:
      state: present
      region: "{{ region }}"
      cidr_block: "{{ vpcidr }}"
      resource_tags:
        tool: ansible
        Name: "{{ project_name }}-vpc"
      subnets:
        - cidr: "{{ subnetcidra }}"
          az: "{{ region }}a"
          resource_tags:
            tool: ansible
            Name: subnet-a
#        - cidr: "{{ subnetcidrb }}"
#          az: "{{ region }}b"
#          resource_tags:
#            tool: ansible
#            Name: subnet-b
      internet_gateway: True
      route_tables:
        - subnets:
           - "{{ subnetcidra }}"
#           - "{{ subnetcidrb }}"
          routes:
            - dest: 0.0.0.0/0
              gw: igw

  - debug: msg="Created VPC named {{ project_name }}-vpc"
  
  - debug: msg="{{ network }}"
  
  - ec2_vpc_net_facts:
      region: "{{ region }}"
      filters:
        "tag:Name": "{{ project_name }}-vpc"
    register: network
  
  - set_fact:
      vpc_id: "{{ network.vpcs[0].id }}"

  - ec2_vpc_subnet_facts:
      region: "{{ region }}"
      filters:
        vpc-id: "{{ vpc_id }}"
    register: vpc_nets
    
  - set_fact:
      subnets: "{{ vpc_nets.subnets | map(attribute='id') | list }}"
 
  - debug: var=subnets[0]
 
  - ec2_group:
      name: servers
      region: "{{ region }}"
      description: SSH and HTTP/HTTPS 
      vpc_id: "{{ vpc_id }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
    register: web_sg
  - debug: msg="Created VPC security group called webservers, ID {{ web_sg.group_id }} to take web traffic"

  - ec2_group:
      name: public-ssh
      region: "{{ region }}"
      description: Security group for public SSH traffic (you may want to restrict this a bit...)
      vpc_id: "{{ network.vpc_id }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
    register: ssh_sg
  - debug: msg="Created VPC security group called public-ssh, ID {{ ssh_sg.group_id }} for granting SSH access to servers."
  
  - name: search for the latest rhel 7 ami
    ec2_ami_find:
      owner: "aws-marketplace"
      region: "{{ region }}"
      name: "CentOS-7.3.*"
    register: find_results

  - debug: var=find_results.results[0].ami_id
  
  - ec2:
      key_name: dfed
      group: servers
      volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: 5
        delete_on_termination: true
      vpc_subnet_id: "{{ subnets[0] }}"
      instance_type: t2.micro
      image: "{{ find_results.results[0].ami_id }}"
      wait: true
      region: "{{ region }}"
      exact_count: 1
      count_tag:
        Count: meseeks
      instance_tags:
        Name: lookatme
        Count: meseeks
      assign_public_ip: true
    register: ec2
